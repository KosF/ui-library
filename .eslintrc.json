{
  "parser": "@typescript-eslint/parser",
  "plugins": ["simple-import-sort", "react", "jest"],
  "extends": [
    "eslint:recommended",
    "plugin:jest/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "globals": {
    "React": true,
    "JSX": true
  },
  "rules": {
    "array-callback-return": [
      "warn",
      {
        "allowImplicit": true
      }
    ],
    "arrow-body-style": ["error", "always"],
    "arrow-parens": ["error", "always"],
    "no-debugger": "error",
    "no-console": [
      "error",
      {
        "allow": ["warn", "error"]
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2
      }
    ],
    "max-len": [
      "error",
      {
        "code": 120,
        "ignorePattern": "^import\\s.+\\sfrom\\s.+;$",
        "ignoreRegExpLiterals": true
      }
    ],
    "max-lines": ["error", 400],
    "linebreak-style": ["error", "unix"],
    "complexity": [
      "error",
      {
        "max": 20
      }
    ],
    "no-duplicate-imports": "error",
    "no-extra-boolean-cast": "error",
    "no-constant-condition": ["error", { "checkLoops": false }],
    "no-null/no-null": "off",
    "no-return-await": "error",
    "no-trailing-spaces": "error",
    "no-underscore-dangle": "error",
    "no-new-wrappers": "error",
    "no-sequences": "error",
    "no-extra-bind": "error",
    "no-eval": "error",
    "no-var": "error",
    "one-var": ["error", "never"],
    "no-global-assign": "warn",
    "object-shorthand": "error",
    "dot-notation": "error",
    "prefer-const": "error",
    "prefer-object-spread": "error",
    "quote-props": [
      "error",
      "as-needed",
      {
        "unnecessary": false
      }
    ],
    "spaced-comment": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "only-multiline"
      }
    ],
    "key-spacing": "error",
    "object-curly-spacing": ["error", "always"],
    "array-bracket-spacing": ["error", "never"],
    "no-mixed-operators": [
      "warn",
      {
        "groups": [
          ["&", "|", "^", "~", "<<", ">>", ">>>"],
          ["==", "!=", "===", "!==", ">", ">=", "<", "<="],
          ["&&", "||"],
          ["in", "instanceof"]
        ],
        "allowSamePrecedence": false
      }
    ],
    "rest-spread-spacing": ["warn", "never"],
    "dot-location": ["warn", "property"],
    // rules for `@typescript-eslint` plugin
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        "allowTernary": true
      }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true
      }
    ],
    "no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/no-inferrable-types": [
      "error",
      {
        "ignoreParameters": true,
        "ignoreProperties": true
      }
    ],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": false,
        "variables": false
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "interface",
        "prefix": ["I"],
        "format": ["PascalCase"],
        "filter": {
          "regex": "(Window)",
          "match": false
        }
      },
      {
        "selector": "enum",
        "prefix": ["E_"],
        "format": ["UPPER_CASE"]
      },
      {
        "selector": "typeParameter",
        "format": ["UPPER_CASE", "StrictPascalCase"]
      }
    ],
    "quotes": "off",
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "semi": "off",
    "@typescript-eslint/semi": ["error", "always"],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error",
      {
        "hoist": "all"
      }
    ],
    // rules for `simple-import-sort` plugin
    "import/no-anonymous-default-export": "off",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // `react` related packages come first
          // Things that start with a letter (or digit or underscore), or `@` followed by a letter
          // Side effect imports.
          ["^react", "^@?\\w", "^\\u0000"],
          // Internal imports
          ["^@(common|entities|pages|components|navigation|utils)(?!.*?.scss$)(/.*|$)"],
          // Parent imports
          ["^[.*|$]"],
          // Styles
          [".scss$"]
        ]
      }
    ],
    "simple-import-sort/exports": "error"
  },
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  },
  "env": {
    "browser": true,
    "es6": true,
    "node": true,
    "jest/globals": true
  },
  "ignorePatterns": "**/*.d.ts",
  "overrides": [
    {
      "files": ["**/*.tsx", "**/*.ts"],
      "rules": {
        "no-undef": "error"
      }
    }
  ]
}
